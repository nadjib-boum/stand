// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id              String    @id @default(uuid())
  name            String?
  username        String?   @unique
  bio             String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  coverImage      String?
  profileImage    String?
  hashedPassword  String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  followingIds    String[] 
  hasNotification Boolean?
  posts           Post[]
  comments        Comment[]
  notifications   Notification[]
}

model Post {
  id                 String   @id @default(uuid())
  body               String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  likedIds           String[] 
  image              String?
  userId             String 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments          Comment[]
}

model Comment {
  id                 String   @id @default(uuid())
  body               String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             String 
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId             String 
  post               Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Notification {
  id                 String   @id @default(uuid())
  body               String
  createdAt          DateTime @default(now())
  userId             String 
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}